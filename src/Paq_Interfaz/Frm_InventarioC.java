package Paq_Interfaz;

import Atxy2k.CustomTextField.RestrictedTextField;
import com.sun.webkit.event.WCKeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ACMK
 */
public class Frm_InventarioC extends javax.swing.JFrame {

    
    Paq_Base_Datos.Operaciones_BD operaciones = new Paq_Base_Datos.Operaciones_BD();
    private String cedula;
    private String codigo;
    DefaultTableModel model;
    private DecimalFormat format = new DecimalFormat("##,###,###,##0.00");
    float resultado = 0;
    
    public Frm_InventarioC() {
        initComponents();
        setLocationRelativeTo(null);
        this.llenar();
        this.Deshabilitar(1);

    }
    
      
    private void Borrar(int tipo) {
        //Elimina campos llenos en el formulario
        switch (tipo){
            case 3:
                txtN.setText(null);
                txtC.setText(null);
                txtD.setText(null);
                txtPrecio.setText(null);
                txtMargen.setText(null);
                txtTotal.setText(null);
                break;
        }
    }
    
    public void llenar(){
        try {
            String[]titulos={"Codigo","Nombre","Descripcion","Linea","Precio",
                "Cantidad"};
            String sql="select * from inventario";
            model= new DefaultTableModel(null,titulos);
            ResultSet rs= operaciones.Consultar(sql);
            String[]fila=new String[8];
            while(rs.next()){
            fila[0]=rs.getString("cod_producto");
            fila[1]=rs.getString("nombre_producto");
            fila[2]=rs.getString("descripcion");
            fila[3]=rs.getString("linea_producto");
            fila[4]=format.format(rs.getFloat("precio_venta"));
            fila[5]=rs.getString("cantidad"); 
                model.addRow(fila);      
            }
            tbl.setModel(model);
            operaciones.conn.close();
            } catch (SQLException e) {
               JOptionPane.showMessageDialog(null, e.getMessage());    
    }
        try {
            String sql = "select * from proveedores";
            ResultSet rs= operaciones.Consultar(sql);
            String[]fila=new String[1];
            while(rs.next()){
            cbxP.addItem(rs.getString("nombre")); 
            }
            operaciones.conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        try {
            String sql1 = "select * from valores where id_valor = '1'";
            ResultSet rs= operaciones.Consultar(sql1);
            while(rs.next()){
            txtIva.setText(rs.getString("iva"));
            }
            operaciones.conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    public void Habilitar(int x){
        //activa los componentes para editar dependiento si es natural o juridico
        if (x==1) {
            txtD.setEnabled(true);
            txtN.setEnabled(true);
            txtPrecio.setEnabled(true);
            txtMargen.setEnabled(true);
            txtTotal.setEnabled(true);
        }
        
    }
    
    public void Deshabilitar(int x){
        if (x==1) {
            txtN.setEnabled(false);
            txtC.setEnabled(false);
            txtD.setEnabled(false);
            txtPrecio.setEnabled(false);
            txtMargen.setEnabled(false);
            txtIva.setEnabled(false);
            txtTotal.setEnabled(false);
        }
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        txtB = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        btnE = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        lblLogo = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbxOpcion = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtN = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtD = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        txtC = new javax.swing.JTextField();
        cbxL = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        cbxP = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtIva = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        txtMargen = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setEnabled(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBActionPerformed(evt);
            }
        });
        txtB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBKeyReleased(evt);
            }
        });
        jPanel1.add(txtB, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 30, 200, 30));

        jScrollPane1.setEnabled(false);

        tbl.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ));
        tbl.setSelectionBackground(new java.awt.Color(0, 153, 51));
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbl);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 760, 320));

        btnE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Guardar-10.png"))); // NOI18N
        btnE.setContentAreaFilled(false);
        btnE.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Guardar-14.png"))); // NOI18N
        btnE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEActionPerformed(evt);
            }
        });
        jPanel1.add(btnE, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 450, 112, 32));

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Atras-10.png"))); // NOI18N
        jButton6.setContentAreaFilled(false);
        jButton6.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Atras-14.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 450, 112, 32));

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/tornavica.png"))); // NOI18N
        jPanel1.add(lblLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 310, 60));

        jLabel8.setFont(new java.awt.Font("Verdana", 3, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 51));
        jLabel8.setText("Inventario");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 160, 40));

        cbxOpcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Codigo", "Linea Producto", "Descripcion" }));
        cbxOpcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxOpcionActionPerformed(evt);
            }
        });
        jPanel1.add(cbxOpcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 30, 120, 30));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 102, 51), new java.awt.Color(0, 153, 51), new java.awt.Color(0, 102, 51), new java.awt.Color(0, 153, 51)), "Datos del Producto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 3, 14), new java.awt.Color(0, 153, 51))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(0, 153, 51));
        jPanel3.setToolTipText("");
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel1.setText("Nombre del Producto");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 30));

        txtN.setEnabled(false);
        txtN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNActionPerformed(evt);
            }
        });
        txtN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNKeyTyped(evt);
            }
        });
        jPanel3.add(txtN, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 170, 30));

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel3.setText("Linea de Producto");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 120, 30));

        jLabel9.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel9.setText("Descripcion");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 110, 20));

        txtD.setColumns(1);
        txtD.setRows(1);
        txtD.setTabSize(1);
        txtD.setEnabled(false);
        jScrollPane3.setViewportView(txtD);

        jPanel3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 300, 50));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel4.setText("Codigo producto");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 30));

        txtC.setEnabled(false);
        jPanel3.add(txtC, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 170, 30));

        cbxL.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laton", "Ferroso", "Bronce" }));
        cbxL.setEnabled(false);
        jPanel3.add(cbxL, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 170, 30));

        jLabel10.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel10.setText("Proveedor");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 120, 30));

        cbxP.setEnabled(false);
        cbxP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPActionPerformed(evt);
            }
        });
        jPanel3.add(cbxP, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 170, 30));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(204, 0, 0));
        jLabel17.setText("*");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 20, 30));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(204, 0, 0));
        jLabel18.setText("*");
        jPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 20, 30));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(204, 0, 0));
        jLabel27.setText("*");
        jPanel3.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 20, 30));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(204, 0, 0));
        jLabel28.setText("*");
        jPanel3.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 20, 30));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(204, 0, 0));
        jLabel22.setText("*");
        jPanel3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 20, 30));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 80, 330, 270));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 102, 51), new java.awt.Color(0, 153, 51), new java.awt.Color(0, 102, 51), new java.awt.Color(0, 153, 51)), "Costo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 3, 14), new java.awt.Color(0, 153, 51))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(0, 153, 51));
        jPanel4.setToolTipText("");
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel6.setText("%");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 20, 30));

        txtTotal.setEditable(false);
        txtTotal.setEnabled(false);
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });
        jPanel4.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 90, 30));

        jLabel16.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel16.setText("Precio de Venta");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 100, 30));

        txtPrecio.setEnabled(false);
        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPrecioKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioKeyTyped(evt);
            }
        });
        jPanel4.add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 70, 30));

        jLabel11.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel11.setText("IVA");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 30, 30));

        txtIva.setEnabled(false);
        txtIva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIvaActionPerformed(evt);
            }
        });
        txtIva.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIvaKeyReleased(evt);
            }
        });
        jPanel4.add(txtIva, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, 30, 30));

        jLabel29.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel29.setText("Margen");
        jPanel4.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 60, 30));

        jLabel13.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel13.setText("%");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 20, 30));

        jLabel30.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel30.setText("Precio Unitario");
        jPanel4.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 100, 30));

        txtMargen.setEnabled(false);
        txtMargen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMargenActionPerformed(evt);
            }
        });
        txtMargen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMargenKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMargenKeyTyped(evt);
            }
        });
        jPanel4.add(txtMargen, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 40, 30));

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(204, 0, 0));
        jLabel31.setText("*");
        jPanel4.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 20, 30));

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(204, 0, 0));
        jLabel32.setText("*");
        jPanel4.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 20, 30));

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(204, 0, 0));
        jLabel33.setText("*");
        jPanel4.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 20, 30));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 360, 330, 120));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Hacer  click en la tabla para editar los datos.");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 330, -1));

        jScrollPane2.setViewportView(jPanel1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEActionPerformed
        int fila = this.tbl.getSelectedRow();
        this.codigo = this.tbl.getValueAt(fila, 0).toString();
        if (this.tbl.getSelectedRow()==-1) {
            JOptionPane.showMessageDialog(null, "Seleccione el Producto que desea editar");
        } else {
                    try {
                          String sql = "update inventario set cod_producto=?, nombre_producto=?,"
                                  + "descripcion=?, precio_unitario=?, margen=?, precio_venta=? where cod_producto="+this.codigo;
                    PreparedStatement ps = operaciones.Actualizar(sql);
                    ps.setLong(1, Long.parseLong(txtC.getText().toLowerCase()));   
                    ps.setString(2, this.txtN.getText().toLowerCase());
                    ps.setString(3, this.txtD.getText().toLowerCase());
                    if(!"".equals(txtPrecio.getText())){
                      ps.setFloat(4, Float.parseFloat(txtPrecio.getText()));  
                    }else{
                      ps.setFloat(4, 0); 
                    }
                    if(!"".equals(txtMargen.getText())){
                      ps.setFloat(5, Float.parseFloat(txtMargen.getText()));  
                    }else{
                      ps.setFloat(5, 0); 
                    }
                    if(!"".equals(txtTotal.getText())){
                      ps.setFloat(6, resultado);  
                    }else{
                      ps.setFloat(6, 0); 
                    }
                    int n = ps.executeUpdate();
                    if (n > 0) {
                        JOptionPane.showMessageDialog(null, "DATOS DEL PRODUCTO ACTUALIZADOS CORRECTAMENTE");
                        this.Borrar(3);
                        this.Deshabilitar(1);
                    }
                    operaciones.conn.close();
                    } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, "ERROR AL ACTUALIZAR LOS DATOS VERIFIQUE QUE SEAN CORRECTOS\n" + e.getMessage()); 
                    }
                      this.llenar(); 
            }
    }//GEN-LAST:event_btnEActionPerformed

    private void tblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMousePressed
        int fila = this.tbl.getSelectedRow();
        this.codigo = this.tbl.getValueAt(fila, 0).toString();
        try {
            String sql = "select *, proveedores.nombre from inventario inner join"
                    + " proveedores on proveedores.cod_proveedor = inventario.cod_proveedor"
                    + " where inventario.cod_producto= '"+codigo+"'";
            ResultSet rs = operaciones.Consultar(sql);
            while(rs.next()){
                if (rs.getString("cod_producto")!="")
                this.txtC.setText(rs.getString("cod_producto"));
                
                if (rs.getString("nombre_producto")!="")
                this.txtN.setText(rs.getString("nombre_producto"));

                if (rs.getString("linea_producto")!="")
                this.cbxL.setSelectedItem(rs.getString("linea_producto"));

                if (rs.getString("descripcion")!="")
                this.txtD.setText(rs.getString("descripcion"));

                if (rs.getString("nombre")!="")
                this.cbxP.setSelectedItem(rs.getString("nombre"));

                if (rs.getString("precio_unitario")!="")
                this.txtPrecio.setText(rs.getString("precio_unitario"));
                
                if (rs.getString("margen")!="")
                this.txtMargen.setText(rs.getString("margen"));
                
                if (rs.getString("precio_venta")!="")
                this.txtTotal.setText(rs.getString("precio_venta"));
                
                this.Habilitar(1);
            }
            operaciones.conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error\n"+e);
        }
    }//GEN-LAST:event_tblMousePressed

    private void txtBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBActionPerformed

    private void cbxOpcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxOpcionActionPerformed
       
    }//GEN-LAST:event_cbxOpcionActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
     
    this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txtNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNActionPerformed

    private void cbxPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxPActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioActionPerformed

    private void txtPrecioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyPressed

    }//GEN-LAST:event_txtPrecioKeyPressed

    private void txtPrecioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyReleased
        float iva = 0, margen = 0, precio=0;
        if (!txtIva.getText().equals("")){
            iva = Float.parseFloat(txtIva.getText());
        }else{
            iva = 0;
        }
        if (!txtMargen.getText().equals("")){
            margen = Float.parseFloat(txtMargen.getText());
        }else{
            margen = 0;
        }
        if (!txtPrecio.getText().equals("")){
            precio = Float.parseFloat(txtPrecio.getText());
        }else{
            precio = 0;
        }
        resultado = precio + (precio*(iva/100));
        resultado += (resultado*(margen/100));
        txtTotal.setText(String.valueOf(format.format(resultado)));
    }//GEN-LAST:event_txtPrecioKeyReleased

    private void txtIvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIvaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIvaActionPerformed

    private void txtIvaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIvaKeyReleased
        float resultado = 0, iva = 0, margen = 0, precio=0;
        if (!txtIva.getText().equals("")){
            iva = Float.parseFloat(txtIva.getText());
        }else{
            iva = 0;
        }
        if (!txtMargen.getText().equals("")){
            margen = Float.parseFloat(txtMargen.getText());
        }else{
            margen = 0;
        }
        if (!txtPrecio.getText().equals("")){
            precio = Float.parseFloat(txtPrecio.getText());
        }else{
            precio = 0;
        }
        resultado = precio + (precio*(iva/100));
        resultado += (resultado*(margen/100));
        txtTotal.setText(String.valueOf(resultado));
    }//GEN-LAST:event_txtIvaKeyReleased

    private void txtMargenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMargenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMargenActionPerformed

    private void txtMargenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMargenKeyReleased
        float iva = 0, margen = 0, precio=0;
        if (!txtIva.getText().equals("")){
            iva = Float.parseFloat(txtIva.getText());
        }else{
            iva = 0;
        }
        if (!txtMargen.getText().equals("")){
            margen = Float.parseFloat(txtMargen.getText());
        }else{
            margen = 0;
        }
        if (!txtPrecio.getText().equals("")){
            precio = Float.parseFloat(txtPrecio.getText());
        }else{
            precio = 0;
        }
        resultado = precio + (precio*(iva/100));
        resultado += (resultado*(margen/100));
        txtTotal.setText(String.valueOf(format.format(resultado)));
    }//GEN-LAST:event_txtMargenKeyReleased

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
    this.requestFocus();
    }//GEN-LAST:event_formWindowLostFocus

    private void txtBKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBKeyReleased
int c = evt.getKeyChar();
        if(cbxOpcion.getSelectedIndex()==0){
            try {
            String[]titulos={"Codigo","Nombre","Descripcion","Linea","Precio",
                "Cantidad"};
            String sql = "select *, proveedores.nombre from inventario inner join"
                    + " proveedores on proveedores.cod_proveedor = inventario.cod_proveedor"
                    + " where inventario.nombre_producto like '"+this.txtB.getText().toLowerCase()+"%'";
            model= new DefaultTableModel(null,titulos);
            ResultSet rs= operaciones.Consultar(sql);
            String[]fila=new String[8];
            while(rs.next()){
            fila[0]=rs.getString("cod_producto");
            fila[1]=rs.getString("nombre_producto");
            fila[2]=rs.getString("descripcion");
            fila[3]=rs.getString("linea_producto");
            fila[4]=format.format(rs.getFloat("precio_venta"));
            fila[5]=rs.getString("cantidad"); 
                model.addRow(fila);
                tbl.setModel(model);
                
            }
            operaciones.conn.close();
            } catch (SQLException e) {
               JOptionPane.showMessageDialog(null, e.getMessage());    
    }
        
    }
        if (!"".equals(txtB.getText())){
        if(cbxOpcion.getSelectedIndex()==1){
    if (c >= 48 && c <= 57 || c == WCKeyEvent.VK_BACK) {
          try {
            String[]titulos={"Codigo","Nombre","Descripcion","Linea","Precio",
                "Cantidad"};
            String sql = "select * from inventario where cod_producto= '"+this.txtB.getText()+ "'";
            model= new DefaultTableModel(null,titulos);
            ResultSet rs= operaciones.Consultar(sql);
            String[]fila=new String[8];
            while(rs.next()){
            fila[0]=rs.getString("cod_producto");
            fila[1]=rs.getString("nombre_producto");
            fila[2]=rs.getString("descripcion");
            fila[3]=rs.getString("linea_producto");
            fila[4]=format.format(rs.getFloat("precio_venta"));
            fila[5]=rs.getString("cantidad"); 
                model.addRow(fila); 
            }
                tbl.setModel(model);
            operaciones.conn.close();
            } catch (SQLException e) {
               JOptionPane.showMessageDialog(null, e.getMessage());    
    }
        }else{
            JOptionPane.showMessageDialog(null, "Ingrese Solo Numeros","ERROR",JOptionPane.ERROR_MESSAGE);
            this.txtB.setText("");
        }
    }
    }
    if(cbxOpcion.getSelectedIndex()==2){
        if (c >= 65 && c <= 90 || c >= 97 && c <= 122 || c >= 128 && c <= 165 || c == WCKeyEvent.VK_BACK) {
         try {
            String[]titulos={"Codigo","Nombre","Descripcion","Linea","Precio",
                "Cantidad"};
            String sql = "select *, proveedores.nombre from inventario inner join"
                    + " proveedores on proveedores.cod_proveedor = inventario.cod_proveedor"
                    + " where inventario.linea_producto like '"+this.txtB.getText().toLowerCase()+"%'";
            model= new DefaultTableModel(null,titulos);
            ResultSet rs= operaciones.Consultar(sql);
            String[]fila=new String[8];
            while(rs.next()){
            fila[0]=rs.getString("cod_producto");
            fila[1]=rs.getString("nombre_producto");
            fila[2]=rs.getString("descripcion");
            fila[3]=rs.getString("linea_producto");
            fila[4]=format.format(rs.getFloat("precio_venta"));
            fila[5]=rs.getString("cantidad"); 
                model.addRow(fila);
                tbl.setModel(model);
                
            }
            operaciones.conn.close();
            } catch (SQLException e) {
               JOptionPane.showMessageDialog(null, e.getMessage());    
    }
        }else{
            JOptionPane.showMessageDialog(null, "Ingrese Solo Letras","ERROR",JOptionPane.ERROR_MESSAGE);
            this.txtB.setText("");
        }
    }
    if(cbxOpcion.getSelectedIndex()==3){
        try {
            String[]titulos={"Codigo","Nombre","Descripcion","Linea","Precio",
                "Cantidad"};
            String sql = "select *, proveedores.nombre from inventario inner join"
                    + " proveedores on proveedores.cod_proveedor = inventario.cod_proveedor"
                    + " where inventario.descripcion like '"+this.txtB.getText().toLowerCase()+"%'";
            model= new DefaultTableModel(null,titulos);
            ResultSet rs= operaciones.Consultar(sql);
            String[]fila=new String[8];
            while(rs.next()){
            fila[0]=rs.getString("cod_producto");
            fila[1]=rs.getString("nombre_producto");
            fila[2]=rs.getString("descripcion");
            fila[3]=rs.getString("linea_producto");
            fila[4]=format.format(rs.getFloat("precio_venta"));
            fila[5]=rs.getString("cantidad"); 
                model.addRow(fila);
                tbl.setModel(model);
                
            }
            operaciones.conn.close();
            } catch (SQLException e) {
               JOptionPane.showMessageDialog(null, e.getMessage());    
    }
    }
    if ("".equals(txtB.getText())){
        this.llenar();
    }
    }//GEN-LAST:event_txtBKeyReleased

    private void txtPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyTyped
        // TODO add your handling code here:
          char c = evt.getKeyChar();
        int lim = txtPrecio.getText().length();
        if (c >= 48 && c <= 57 || c==46 || c == WCKeyEvent.VK_BACK) {
            if (this.EventoKeyType(lim, 10)) {
                evt.consume();
                getToolkit().beep();
            }
        } else {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtPrecioKeyTyped

    private void txtMargenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMargenKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        int lim = txtMargen.getText().length();
        if (c >= 48 && c <= 57 || c == WCKeyEvent.VK_BACK) {
            if (this.EventoKeyType(lim, 2)) {
                evt.consume();
                getToolkit().beep();
            }
        } else {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtMargenKeyTyped

    private void txtNKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNKeyTyped
        // TODO add your handling code here:
         char c = evt.getKeyChar();
        /*verifico que el caracter sea una letra mayuscula o minuscula o sea la tecla de borrar
         si no emito un sonido e ignoro lo que teclee*/
        if (c >= 65 && c <= 90 || c >= 97 && c <= 122 || c >= 128 && c <= 165 ||c >= 48 && c <= 57 || c == evt.VK_SPACE ||c == WCKeyEvent.VK_BACK) {
            //establesco limite
            int lim = txtN.getText().length();
            //cambie este numero que es el limite
            if (lim >= 40) {
                evt.consume();
                getToolkit().beep();
            }
        } else {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_txtNKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try{
          UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        }catch(Exception e){
          e.printStackTrace();
        } 
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_InventarioC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnE;
    private javax.swing.JComboBox<String> cbxL;
    private javax.swing.JComboBox<String> cbxOpcion;
    private javax.swing.JComboBox<String> cbxP;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblLogo;
    public javax.swing.JTable tbl;
    private javax.swing.JTextField txtB;
    private javax.swing.JTextField txtC;
    private javax.swing.JTextArea txtD;
    private javax.swing.JTextField txtIva;
    private javax.swing.JTextField txtMargen;
    private javax.swing.JTextField txtN;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
 private boolean EventoKeyType(int valor, int limitacion){
            //pido el valor del text y pido el valor limitante
            if (valor >= limitacion) {
                return true;
            }else{
                return false;
            }
    }



}

